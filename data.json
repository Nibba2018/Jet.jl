[
  {
    "command": "",
    "description": "Tools for working with tabular data.",
    "kind": "header",
    "package": "DataFrames",
    "tags": [
      "data",
      "data-frame",
      "datasets",
      "tabular-data"
    ]
  },
  {
    "command": "df = DataFrame(A = 1:3, B = [:odd, :even, :odd])",
    "description": "Create a new DataFrame by passing the column headers and contents",
    "kind": "snippet",
    "package": "DataFrames",
    "tags": [
      "DataFrame",
      "create",
      "data"
    ]
  },
  {
    "command": "",
    "description": "A package for fast help and snippets.",
    "kind": "header",
    "package": "Jet",
    "tags": [
      "help",
      "snippet"
    ]
  },
  {
    "command": "}",
    "description": "Enter `jet>` mode.",
    "kind": "snippet",
    "package": "Jet",
    "tags": [
      "help",
      "snippet"
    ]
  },
  {
    "command": "jet\"keyword\"",
    "description": "Search for commands and packages related to the `keyword`.",
    "kind": "snippet",
    "package": "Jet",
    "tags": [
      "help",
      "snippet"
    ]
  },
  {
    "command": "F = cholesky(A)\n  F \\ b",
    "description": "Solve a linear system `Ax = b` using the Cholesky factorization",
    "kind": "snippet",
    "package": "LinearAlgebra",
    "tags": [
      "cholesky",
      "factorization",
      "linear-algebra"
    ]
  },
  {
    "command": "",
    "description": "Plotting API and toolset",
    "kind": "header",
    "package": "Plots",
    "tags": [
      "GR",
      "GraphRecipes",
      "InspectDR",
      "ORCA",
      "PGFPlotsX",
      "PlotlyJS",
      "PyPlot",
      "StatsPlots",
      "UnicodePlots",
      "plots",
      "plotting",
      "visualization"
    ]
  },
  {
    "command": "plot!(x, y)",
    "description": "Update an existing plot",
    "kind": "snippet",
    "package": "Plots",
    "tags": [
      "create",
      "line",
      "plot",
      "update"
    ]
  },
  {
    "command": "savefig(\"plot.png\")",
    "description": "Save an existing plot to a file",
    "kind": "snippet",
    "package": "Plots",
    "tags": [
      "pdf",
      "plot",
      "png",
      "save",
      "store"
    ]
  },
  {
    "command": "boxplot([\"Series 1\"], y)",
    "description": "Create a basic Boxplot on a vector of numbers",
    "kind": "snippet",
    "package": "Plots",
    "tags": [
      "IQR",
      "boxplot",
      "create",
      "plot"
    ]
  },
  {
    "command": "violin([\"Series 1\"], y)",
    "description": "Create a basic Violin plot on a vector of numbers",
    "kind": "snippet",
    "package": "Plots",
    "tags": [
      "create",
      "plot",
      "violin",
      "violin plot"
    ]
  },
  {
    "command": "plot(x, y)",
    "description": "Create a basic line plot on two vectors of numbers",
    "kind": "snippet",
    "package": "Plots",
    "tags": [
      "create",
      "line plot",
      "plot"
    ]
  },
  {
    "command": "scatter(x, y)",
    "description": "Create a basic scatter plot on two vectors of numbers",
    "kind": "snippet",
    "package": "Plots",
    "tags": [
      "create",
      "plot",
      "scatter",
      "scatter plot"
    ]
  }
]
